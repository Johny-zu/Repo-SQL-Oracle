CONN system/<password>
CONN HR/HR;


-- Veremos como hacer uso del commit y rollback
DECLARE X NUMERIC; -- Crea una variable x de tipo numerico donde se almacenaran las cosas
BEGIN -- Inicia el bloque anonimo PL/SQL 
UPDATE EMPLOYEES SET SALARY = 2000 WHERE LAST_NAME = 'BLAKE'; -- Calcula la suma de salarios y los almacena en la variable 
SAVEPOINT BLAKE; --Crea un punto de guardado y le da un nombre
UPDATE EMPLOYEES SET SALARY = 1500 WHERE LAST_NAME = 'CLARK';
SAVEPOINT CLARK;
SELECT SUM(SALARY) INTO X FROM EMPLOYEES;
ROLLBACK TO SAVEPOINT BLAKE; --Regresa a un punto de guardado anterior
UPDATE EMPLOYEES SET SALARY = 1300 WHERE LAST_NAME = 'CLARK';
COMMIT; -- Confirma los datos cambiados y se guardaran permanentemente
END; -- fin del bloque pl
/ --Ejecuta el bloque de codigo PL/SQL


-- FUNCION EJERCICIO
BEGIN
SAVEPOINT FIRST;
UPDATE EMPLOYEES SET SALARY = 2000 WHERE FIRST_NAME = 'John';
SAVEPOINT JOHN;
UPDATE EMPLOYEES SET SALARY = 2500 WHERE FIRST_NAME = 'John';
SAVEPOINT JOHN2;
ROLLBACK TO SAVEPOINT FIRST;
END;
/

-- Funcion numeric
DECLARE X NUMERIC;
BEGIN
SAVEPOINT FIRST;
SELECT SUM(SALARY) INTO X FROM EMPLOYEES;
INSERT INTO REGIONS2 VALUES(100, 'TRANSACCION');
SAVEPOINT REGIONS;
UPDATE DEPARTMENTS SET DEPARTMENT_NAME = 'TEST' WHERE DEPARTMENT_ID = '220';
SAVEPOINT DEPARTMENTS;
ROLLBACK TO SAVEPOINT REGIONS;
END;
/

INSERT INTO REGIONS (REGION_ID, REGION_NAME) VALUES(5, 'Nort America');

SELECT FIRST_NAME, DEPARTMENT_ID SALARY FROM EMPLOYEES
WHERE (SALARY,DEPARTMENT_ID) IN (SELECT MAX(SALARY), DEPARTMENT_ID FROM EMPLOYEES
GROUP BY DEPARTMENT_ID)
ORDER BY DEPARTMENT_ID;

UPDATE REGIONS SET REGION_ID = 6 WHERE REGION_ID = 5;

--FUNCION NUEVA
DECLARE X NUMERIC ;
BEGIN 
UPDATE EMPLOYEES SET SALARY = 3000 WHERE FIRST_NAME = 'John';
SAVEPOINT JOHN;
UPDATE EMPLOYEES SET SALARY = 2500 WHERE FIRST_NAME = 'Amy';
SAVEPOINT AMY;
SELECT SUM(SALARY) INTO X FROM EMPLOYEES;
ROLLBACK TO SAVEPOINT AMY;
UPDATE EMPLOYEES SET SALARY = 1500 WHERE FIRST_NAME = 'BLAKE';
COMMIT;
END;
/


